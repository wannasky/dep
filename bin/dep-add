#!/usr/bin/env node

const commander = require('commander');
const path = require('path');
const logger = require('../lib/util/logger');
const utils = require('../lib/util/utils');
const fileUtil = require('../lib/util/fileUtil');
const execute = require('../lib/util/execute');

process.on('unhandledRejection', error => {
    throw error;
});

['SIGINT', 'SIGTERM'].forEach(sig => {
    process.on(sig, () => {
        process.exit();
    });
});

commander
    .arguments('<repo>')
    .option('-r, --reversion <value>', '指定模块版本')
    .on('--help', () => {
        logger.file(path.join(__dirname, '../doc/add.txt'))
    })
    .parse(process.argv);

utils.check();

let config = utils.parseRepo(commander.args[0]);
if(!config){
    logger.error(`请运行‘dep add --help’查看具体用法`);
    process.exit(-1);
}
if(commander.args[1]){
    config.position = commander.args[1];
}

const moduleDir = path.join(process.cwd(), config.position || config.module);

if(fileUtil.exist(moduleDir)){
    let isSvnModule = utils.isSvnModule(moduleDir);
    let isGitModule = utils.isGitModule(moduleDir);
    let question = `${config.position || config.module}目录已存在，是否继续(y or n)?`;
    utils.askQuestion([question], (answers) => {
        let answer = answers[0].toLowerCase();
        if(answer === 'y' || answer === 'yes') {
            logger.info(`开始清除已跟踪文件: ${moduleDir}`);
            if(isSvnModule){
                utils.deleteSvnFiles(moduleDir);
            }
            if(isGitModule){
                utils.deleteGitFiles(moduleDir);
            }
            utils.checkoutAndSave(config.module, config.repo, config.position, commander.reversion);
        }
    });
}else{
    utils.checkoutAndSave(config.module, config.repo, config.position, commander.reversion);
}
