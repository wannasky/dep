#!/usr/bin/env node

const commander = require('commander');
const path = require('path');
const logger = require('../lib/util/logger');
const utils = require('../lib/util/utils');
const fileUtil = require('../lib/util/fileUtil');


process.on('unhandledRejection', error => {
    throw error;
});

['SIGINT', 'SIGTERM'].forEach(sig => {
    process.on(sig, () => {
        process.exit();
    });
});

commander
    .option('-u, --username <value>', '指定用户名')
    .option('-p, --password <value>', '指定密码')
    .option('-e, --env', '从ENV获取用户名和密码')
    .option('-l, --list', '查看配置')
    .on('--help', () => {
        logger.file(path.join(__dirname, '../doc/config.txt'))
    })
    .parse(process.argv);

let config = utils.getSvnConfig();

if(commander.list){
    logger.info(` username: ${config.username || ''} \r\n password: ${config.password || ''}`);
    return;
}

if(commander.username) {
    config.username = commander.env ? process.env[commander.username] : commander.username;
}
if(commander.password){
    config.password = commander.env ? process.env[commander.password] : commander.password;
}

fileUtil.writeFileSync(path.join(__dirname, '../lib/config/.config.json'), JSON.stringify(config, null, '\t'));
